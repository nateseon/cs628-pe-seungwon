{"ast":null,"code":"var _jsxFileName = \"/workspaces/MyResume/PE05-Recipe Finder/recipe_finder/frontend/src/components/EditRecipe.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n_c = Form;\nconst Input = styled.input`\n  margin: 0.5rem 0;\n  padding: 0.5rem;\n  font-size: 1rem;\n`;\n_c2 = Input;\nconst Textarea = styled.textarea`\n  margin: 0.5rem 0;\n  padding: 0.5rem;\n  font-size: 1rem;\n  height: 100px;\n`;\n_c3 = Textarea;\nconst Button = styled.button`\n  padding: 0.5rem;\n  font-size: 1rem;\n  background: #007bff; /* Consistent background color */\n  color: #fff; /* Consistent text color */\n  border: none;\n  cursor: pointer;\n  &:hover {\n    background: #0056b3;\n  }\n  margin: 0.5rem; /* Add spacing between buttons */\n`;\n_c4 = Button;\nfunction EditRecipe() {\n  _s();\n  const {\n    id\n  } = useParams(); // Get the recipe ID from URL parameters\n  const [name, setName] = useState(''); // State to store recipe name\n  const [ingredients, setIngredients] = useState(''); // State to store recipe ingredients\n  const [instructions, setInstructions] = useState(''); // State to store recipe instructions\n  const [error, setError] = useState(null); // State to store error message\n  const navigate = useNavigate(); // Hook to navigate programmatically\n\n  useEffect(() => {\n    fetch(`https://glorious-capybara-jjrw767jw6r7fwxq-5000.app.github.dev/api/recipes/${id}`).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setName(data.name); // Set recipe name in state\n      setIngredients(data.ingredients.join(', ')); // Join ingredients array into string\n      setInstructions(data.instructions); // Set recipe instructions in state\n    }).catch(error => setError(error)); // Set error message in state\n  }, [id]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const updatedRecipe = {\n      name,\n      ingredients: ingredients.split(','),\n      instructions\n    }; // Split ingredients string into array\n\n    fetch(`https://glorious-capybara-jjrw767jw6r7fwxq-5000.app.github.dev/api/recipes/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedRecipe)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setName(''); // Reset name state\n      setIngredients(''); // Reset ingredients state\n      setInstructions(''); // Reset instructions state\n      navigate('/'); // Navigate to the recipe list page after editing\n    }).catch(error => setError(error)); // Set error message in state\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 12\n    }, this); // Display error message\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: \"Recipe Name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: \"Ingredients (comma separated)\",\n        value: ingredients,\n        onChange: e => setIngredients(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n        placeholder: \"Instructions\",\n        value: instructions,\n        onChange: e => setInstructions(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Update Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(EditRecipe, \"561eQxo9/ppmeUsKMS41k55Ypqg=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c5 = EditRecipe;\nexport default EditRecipe;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"Textarea\");\n$RefreshReg$(_c4, \"Button\");\n$RefreshReg$(_c5, \"EditRecipe\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","styled","jsxDEV","_jsxDEV","Form","form","_c","Input","input","_c2","Textarea","textarea","_c3","Button","button","_c4","EditRecipe","_s","id","name","setName","ingredients","setIngredients","instructions","setInstructions","error","setError","navigate","fetch","then","response","ok","Error","json","data","join","catch","handleSubmit","e","preventDefault","updatedRecipe","split","method","headers","body","JSON","stringify","children","message","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","_c5","$RefreshReg$"],"sources":["/workspaces/MyResume/PE05-Recipe Finder/recipe_finder/frontend/src/components/EditRecipe.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Input = styled.input`\n  margin: 0.5rem 0;\n  padding: 0.5rem;\n  font-size: 1rem;\n`;\n\nconst Textarea = styled.textarea`\n  margin: 0.5rem 0;\n  padding: 0.5rem;\n  font-size: 1rem;\n  height: 100px;\n`;\n\nconst Button = styled.button`\n  padding: 0.5rem;\n  font-size: 1rem;\n  background: #007bff; /* Consistent background color */\n  color: #fff; /* Consistent text color */\n  border: none;\n  cursor: pointer;\n  &:hover {\n    background: #0056b3;\n  }\n  margin: 0.5rem; /* Add spacing between buttons */\n`;\n\nfunction EditRecipe() {\n  const { id } = useParams(); // Get the recipe ID from URL parameters\n  const [name, setName] = useState(''); // State to store recipe name\n  const [ingredients, setIngredients] = useState(''); // State to store recipe ingredients\n  const [instructions, setInstructions] = useState(''); // State to store recipe instructions\n  const [error, setError] = useState(null); // State to store error message\n  const navigate = useNavigate(); // Hook to navigate programmatically\n\n  useEffect(() => {\n    fetch(`https://glorious-capybara-jjrw767jw6r7fwxq-5000.app.github.dev/api/recipes/${id}`)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => {\n        setName(data.name); // Set recipe name in state\n        setIngredients(data.ingredients.join(', ')); // Join ingredients array into string\n        setInstructions(data.instructions); // Set recipe instructions in state\n      })\n      .catch(error => setError(error)); // Set error message in state\n  }, [id]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const updatedRecipe = { name, ingredients: ingredients.split(','), instructions }; // Split ingredients string into array\n\n    fetch(`https://glorious-capybara-jjrw767jw6r7fwxq-5000.app.github.dev/api/recipes/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(updatedRecipe),\n    })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => {\n        setName(''); // Reset name state\n        setIngredients(''); // Reset ingredients state\n        setInstructions(''); // Reset instructions state\n        navigate('/'); // Navigate to the recipe list page after editing\n      })\n      .catch(error => setError(error)); // Set error message in state\n  };\n\n  if (error) {\n    return <div>Error: {error.message}</div>; // Display error message\n  }\n\n  return (\n    <div>\n      <h1>Edit Recipe</h1>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          placeholder=\"Recipe Name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <Input\n          type=\"text\"\n          placeholder=\"Ingredients (comma separated)\"\n          value={ingredients}\n          onChange={(e) => setIngredients(e.target.value)}\n        />\n        <Textarea\n          placeholder=\"Instructions\"\n          value={instructions}\n          onChange={(e) => setInstructions(e.target.value)}\n        />\n        <Button type=\"submit\">Update Recipe</Button>\n      </Form>\n    </div>\n  );\n}\n\nexport default EditRecipe;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}